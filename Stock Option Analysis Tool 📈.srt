1
00:00:01,920 --> 00:00:04,152
Hi, I'm Apoorva Raji, and,

2
00:00:04,153 --> 00:00:08,765
uh, I'm currently in my third year of Bachelor's degree in Computer

3
00:00:08,766 --> 00:00:13,328
Science and Engineering with specialization in Artificial Intelligence and Machine

4
00:00:13,329 --> 00:00:16,580
Learning, uh, from Vellore Institute of Technology.

5
00:00:16,581 --> 00:00:21,154
Uh, I'm excited to share my project with you

6
00:00:21,155 --> 00:00:25,887
today. In this project, I worked at the Upstox API to build a stock

7
00:00:25,888 --> 00:00:27,989
option analysis tool. So,

8
00:00:27,990 --> 00:00:30,530
uh, basically this tool helps,

9
00:00:30,531 --> 00:00:34,381
to analyze option chains, calculate margin requirements,

10
00:00:34,405 --> 00:00:37,443
and compute the premium earned for different options.

11
00:00:38,688 --> 00:00:42,686
So, the project overflow can be divided into several parts.

12
00:00:43,011 --> 00:00:45,048
First one is API authentication.

13
00:00:45,432 --> 00:00:47,670
Second one is fetching option chain data.

14
00:00:47,671 --> 00:00:49,971
Third one is data processing and analysis.

15
00:00:49,972 --> 00:00:54,454
And the last and the most important step is margin and premium earned calculation.

16
00:00:55,859 --> 00:00:59,580
So, let me walk you through, uh,

17
00:00:59,600 --> 00:01:02,982
some of the key functions in the code. As you can see here,

18
00:01:02,983 --> 00:01:05,044
uh, this is the code structure.

19
00:01:05,182 --> 00:01:08,226
First one is API authentication and data retrieval.

20
00:01:08,745 --> 00:01:11,649
So, here, uh, we have imported the dependencies,

21
00:01:11,650 --> 00:01:14,070
pandas, numpy, and request.

22
00:01:14,769 --> 00:01:18,612
And next step, we have, uh,

23
00:01:18,632 --> 00:01:23,275
we have loaded the upstox API key and the secret key using .env

24
00:01:23,276 --> 00:01:28,219
file in the Google full app. And the next step is to get authorization

25
00:01:28,220 --> 00:01:31,001
key. So the authorization key is.

26
00:01:31,002 --> 00:01:34,644
Uh, through the authorization key, we can get the access token.

27
00:01:34,962 --> 00:01:39,747
So this is my redirect URL. Uh, and this is the URL

28
00:01:40,386 --> 00:01:43,069
through which we are going to get the, uh,

29
00:01:43,089 --> 00:01:47,782
authorization. So this output URL helps to get

30
00:01:47,783 --> 00:01:51,235
this authorization key, which is this one.

31
00:01:51,994 --> 00:01:54,958
And now this is the code to get the access token.

32
00:01:54,959 --> 00:01:59,610
This is the URL from the upstox documentation to get the access token.

33
00:01:59,611 --> 00:02:01,701
Thank you. And the data here we,

34
00:02:01,702 --> 00:02:03,846
uh, added is code,

35
00:02:04,159 --> 00:02:07,045
which is basically the authorization key client ID,

36
00:02:07,046 --> 00:02:09,270
which is basically the upstox API key.

37
00:02:09,582 --> 00:02:12,852
And the client, uh, RC, this is our secret key.

38
00:02:14,185 --> 00:02:18,032
And this is a redirect URL. So,

39
00:02:18,033 --> 00:02:20,163
uh, from this code,

40
00:02:20,164 --> 00:02:22,839
we got the access token and we saved it here.

41
00:02:23,271 --> 00:02:25,361
And this is the code to get the instrument.

42
00:02:25,753 --> 00:02:30,270
so this instrument key is important so that we can get this

43
00:02:30,271 --> 00:02:34,843
sound sample of, uh, different types of instrument key to retrieve the

44
00:02:34,844 --> 00:02:37,225
data. Now, the next step is,

45
00:02:37,226 --> 00:02:40,046
uh, fetch option chain data. So,

46
00:02:40,047 --> 00:02:42,548
uh, the option chain data,

47
00:02:42,549 --> 00:02:44,810
uh, is basically,

48
00:02:44,811 --> 00:02:49,118
uh, we designed the function, the get option chain data function,

49
00:02:49,407 --> 00:02:51,964
which retrieves data about various options,

50
00:02:51,965 --> 00:02:55,022
both put and call for given instrument key,

51
00:02:55,231 --> 00:02:58,525
let's suppose nifty. This data includes strike,

52
00:02:58,733 --> 00:03:01,620
prices, open interest and bid ask prices,

53
00:03:01,820 --> 00:03:03,940
which are important for any options to them.

54
00:03:04,360 --> 00:03:07,300
So we can see here the code, uh,

55
00:03:08,240 --> 00:03:10,360
this is the URL, uh,

56
00:03:10,720 --> 00:03:14,940
from the upstops to get the option chain data and the parameters we use

57
00:03:14,941 --> 00:03:19,460
here is instrument key and the expiry date instrument key I'm using here is

58
00:03:19,461 --> 00:03:22,320
nifty and the expiry date is 14th of November,

59
00:03:22,400 --> 00:03:25,940
2024. And the,

60
00:03:26,160 --> 00:03:29,620
we got the output output is basically in the JSON format.

61
00:03:29,621 --> 00:03:33,930
as you can see here. And the length of the output is 94.

62
00:03:34,470 --> 00:03:37,490
So next step is data processing and option chain formatting.

63
00:03:37,970 --> 00:03:43,110
So we have formatted the data we got from this code in

64
00:03:43,111 --> 00:03:47,690
this particular format, which is basically how the option chain would look in

65
00:03:47,691 --> 00:03:51,130
upstops. So these are the columns like column volume,

66
00:03:51,490 --> 00:03:54,030
column IV, col, vega, gamma,

67
00:03:54,410 --> 00:03:59,170
theta, delta, and so on. We have converted this into proper data frame,

68
00:03:59,670 --> 00:04:01,917
as you can see.

69
00:04:01,918 --> 00:04:06,565
This is the data we got after processing and formatting.

70
00:04:06,566 --> 00:04:10,086
So, uh,

71
00:04:10,106 --> 00:04:12,287
proceeding to the next step, which is,

72
00:04:12,288 --> 00:04:14,289
uh,

73
00:04:14,309 --> 00:04:17,721
to design the get option chain data. As we have seen,

74
00:04:17,722 --> 00:04:20,015
we have, uh, retrieved the option chain data.

75
00:04:20,231 --> 00:04:23,535
Now, uh, this function, this function basically,

76
00:04:23,536 --> 00:04:28,128
uh, returns the higher bid price for put options that is PE or

77
00:04:28,129 --> 00:04:32,351
the highest aspirate for all options that is CE for each strike price.

78
00:04:32,352 --> 00:04:34,983
As you can see, this, uh, whole functions,

79
00:04:34,984 --> 00:04:37,404
uh,

80
00:04:37,424 --> 00:04:41,937
did this. And the instrument name I used

81
00:04:41,938 --> 00:04:45,402
here is Nifty. And the result we got is.

82
00:04:46,699 --> 00:04:49,284
For Nifty, for the strike price,

83
00:04:49,801 --> 00:04:51,824
the side PE is,

84
00:04:51,825 --> 00:04:56,357
and the bid ask is this. And the next step is margin and

85
00:04:56,358 --> 00:04:58,751
calculation. So,

86
00:04:58,867 --> 00:05:01,520
Margin and Premium Calculation, that is this function,

87
00:05:01,521 --> 00:05:03,982
the calculate margin and premium, uh,

88
00:05:04,002 --> 00:05:08,535
function calculates two key metrics. First one is margin required and second one

89
00:05:08,536 --> 00:05:10,647
is premium required. So, uh,

90
00:05:10,667 --> 00:05:14,003
margin required is based on the lot size and bid price.

91
00:05:14,216 --> 00:05:18,226
And the premium earned is the total premium collected based on the bid prices.

92
00:05:18,959 --> 00:05:23,846
So, this function, uh, basically helps to understand the financial commitment needed to

93
00:05:23,847 --> 00:05:26,692
take a position in options and the potential returns.

94
00:05:27,125 --> 00:05:31,901
Example, as you As can see here, the margin

95
00:05:31,902 --> 00:05:36,624
calculation logic multiplies the lot size and applies the multiplier to

96
00:05:36,744 --> 00:05:39,746
estimate the margin required to buy an option.

97
00:05:39,747 --> 00:05:42,188
And the final result,

98
00:05:42,348 --> 00:05:44,489
as we can see here, this is the final result.

99
00:05:44,529 --> 00:05:46,651
For instrument key Nifty,

100
00:05:46,851 --> 00:05:49,453
we got this margin and premium earned.

101
00:05:51,774 --> 00:05:56,287
So, uh, one of the main challenges I faced during this project was handling

102
00:05:56,288 --> 00:06:00,980
API rate limits and ensuring the data was phased correctly,

103
00:06:00,981 --> 00:06:04,085
especially when, uh, dealing with large sets of market data.

104
00:06:04,680 --> 00:06:09,035
I also needed to ensure that the data returned from the API was in

105
00:06:09,036 --> 00:06:13,588
structure format or, uh, and proper processing and analysis should

106
00:06:13,589 --> 00:06:15,790
be done so that, uh,

107
00:06:15,810 --> 00:06:17,814
we get the data in proper format.

108
00:06:18,489 --> 00:06:20,873
And then another challenge I was faced,

109
00:06:20,874 --> 00:06:26,037
uh, and another challenge was to understand how margin calculation works for

110
00:06:26,038 --> 00:06:30,610
options, like there are various factors involved such as lot size and option

111
00:06:30,611 --> 00:06:34,562
types. It's a critical for making decisions in a real trading environment.

112
00:06:34,563 --> 00:06:38,302
Um, and throughout this project,

113
00:06:38,548 --> 00:06:43,058
I applied systematic approach to break down each problem and tackle it into one

114
00:06:43,059 --> 00:06:47,821
step at a time. So the biggest insight I gained was how APS

115
00:06:47,822 --> 00:06:52,915
can use to access real-time market data and make automated financial

116
00:06:52,916 --> 00:06:56,057
decisions based on that data. So it helped me,

117
00:06:56,058 --> 00:06:59,856
uh, realize that importance of clean data,

118
00:07:00,003 --> 00:07:03,482
reliable communication and automation and making,

119
00:07:03,483 --> 00:07:08,525
uh, real-time decisions. And the unique approach I used here is,

120
00:07:08,526 --> 00:07:11,167
uh,

121
00:07:11,187 --> 00:07:15,344
integrating the margin calculation logic and the premium earn formula,

122
00:07:15,655 --> 00:07:20,463
both, both of which are crucial for option traders like for automate

123
00:07:20,464 --> 00:07:23,650
by like by automating these calculations,

124
00:07:24,000 --> 00:07:29,054
I've created tool that can potentially be expanded for broader market analysis

125
00:07:29,564 --> 00:07:33,558
and which could assist traders in making real-time data-driven decisions.

126
00:07:35,408 --> 00:07:38,087
Thank you for watching. I hope this video gave you,

127
00:07:38,088 --> 00:07:41,866
uh, an insight into how I approached building this project.

128
00:07:42,215 --> 00:07:46,755
I look forward to any feedback and opportunity to further discuss how I

129
00:07:46,756 --> 00:07:51,615
can contribute to breakout AI as part of this Python development team.

130
00:07:51,824 --> 00:07:52,440
Thank you.
